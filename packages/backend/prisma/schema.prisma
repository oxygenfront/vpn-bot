generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Пользователи
model User {
  id            Int                @id @unique
  telegramId    String             @unique
  username      String?
  firstName     String?
  lastName      String?
  langCode      String             @default("ru")
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  subscriptions UserSubscription[] // Связь с активными подписками пользователей
}

// Тарифы (Base, Standard, Premium)
model Plan {
  id                Int                @id @default(autoincrement())
  name              String             @unique // "Base", "Standard", "Premium"
  trafficLimit      String // "100 GB", "200 GB", "Unlimited"
  subscriptionPlans SubscriptionPlan[] // Связь с шаблонами подписок
}

// Диапазоны устройств (1-3, 3-5, 5-9)
model DeviceRange {
  id                Int                @id @default(autoincrement())
  range             String             @unique // "1-3", "3-5", "5-9"
  subscriptionPlans SubscriptionPlan[] // Связь с шаблонами подписок
}

// Шаблоны подписок (комбинация тарифа, устройств и длительности)
model SubscriptionPlan {
  id                Int                @id @default(autoincrement())
  planId            Int
  deviceRangeId     Int
  months            Int // 1, 3, 6, 12
  price             Float // Стоимость в рублях
  plan              Plan               @relation(fields: [planId], references: [id])
  deviceRange       DeviceRange        @relation(fields: [deviceRangeId], references: [id])
  userSubscriptions UserSubscription[] // Связь с активными подписками пользователей

  @@unique([planId, deviceRangeId, months]) // Уникальность комбинации тариф+устройства+месяцы
}

// Активные подписки пользователей
model UserSubscription {
  id                 Int              @id @default(autoincrement())
  userId             Int
  subscriptionPlanId Int
  purchaseDate       DateTime         @default(now()) // Дата покупки
  user               User             @relation(fields: [userId], references: [id])
  subscriptionPlan   SubscriptionPlan @relation(fields: [subscriptionPlanId], references: [id])

  @@index([userId]) // Индекс для быстрого поиска по пользователю
}
