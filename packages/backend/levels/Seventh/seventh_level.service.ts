import { Injectable } from "@nestjs/common";
import {
    MyContext,
    PromocodeTypes,
    StepsEnum
} from "../../interfaces/telegram.interface";
import { TelegramUtils } from "../../utils/telegram-utils";

@Injectable()
export class SeventhLevelService {
    constructor(
        private readonly telegramUtils: TelegramUtils,
    ) {
    }

    async handleMinMonthsOrderAmount( ctx: MyContext ) {
        if ( 'message' in ctx.update && 'text' in ctx.update.message ) {
            ctx.session.promocodeMinOrderAmount = Number(ctx.update.message.text)
        }

        const text = `üéâ –ü—Ä–æ–º–æ–∫–æ–¥ \`${ctx.session.promocode}\` –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è

üìã *_–î–µ—Ç–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞:_*

‚Ä¢ üéüÔ∏è –ü—Ä–æ–º–æ–∫–æ–¥: \`${ctx.session.promocode}\`
‚Ä¢ ‚öôÔ∏è –¢–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞: \`${PromocodeTypes[ctx.session.promocodeType as 'fixed' | 'percent']}\`
‚Ä¢ üí∏ –°–∫–∏–¥–∫–∞: \`${ctx.session.promocodeValue} ${ctx.session.promocodeType === 'percent' ? '%' : '‚ÇΩ'}\`
‚Ä¢ üí∏ –ú–∏–Ω. —Å—É–º–º–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: \`${ctx.session.promocodeMinOrderAmount} ‚ÇΩ\`
‚Ä¢ üìÖ –ú–∏–Ω. –∫–æ–ª-–≤–æ –º–µ—Å—è—Ü–µ–≤ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ‚îÅ‚îÅ
‚Ä¢ üìÖ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ: ‚îÅ‚îÅ
‚Ä¢ üî¢ –í—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: ‚îÅ‚îÅ
‚Ä¢ üë§ –ù–∞ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ‚îÅ‚îÅ.
\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n
‚ö†Ô∏è *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:* _–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞_ .`
        const keyboard = {
            inline_keyboard: [
                [
                    {
                        text: '1 –º–µ—Å—è—Ü',
                        callback_data: 'choose_min_months_order_amount_1'
                    },
                    {
                        text: '3 –º–µ—Å—è—Ü–∞',
                        callback_data: 'choose_min_months_order_amount_3'
                    }
                ],
                [
                    {
                        text: '6 –º–µ—Å—è—Ü–µ–≤',
                        callback_data: 'choose_min_months_order_amount_6'
                    },
                    {
                        text: '12 –º–µ—Å—è—Ü–µ–≤',
                        callback_data: 'choose_min_months_order_amount_12'
                    }
                ],
                [
                    {
                        text: 'üîô –ù–∞–∑–∞–¥',
                        callback_data: `choose_value_${ctx.session.promocodeValue}`
                    }
                ]
            ]
        }

        if ( 'message' in ctx.update && 'text' in ctx.update.message && ctx.session.promocodeMessageId ) {
            try {
                const message = await ctx.telegram.editMessageText(
                    ctx.update.message.from.id,
                    ctx.session.promocodeMessageId,
                    undefined,
                    this.telegramUtils.escapeMarkdown(text),
                    { reply_markup: keyboard, parse_mode: 'MarkdownV2' }
                );
                if ( typeof message !== 'boolean' ) {
                    ctx.session.promocodeMessageId = message.message_id
                }

                ctx.session.step = null;

            } catch ( e ) {
                console.log(e);
            }
        } else {
            const message = await this.telegramUtils.sendOrEditMessage(ctx, text, keyboard);
            if ( typeof message !== 'boolean' ) {
                ctx.session.promocodeMessageId = message.message_id
            }
        }
    }

    async handleWritePromocode( ctx: MyContext ) {
        ctx.session.step = StepsEnum.ENTER_PROMOCODE
        const text = `*_–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ :_*
        
üü¢ –£–∑–Ω–∞–π—Ç–µ –æ–± –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–∞—Ö –≤ –Ω–∞—à–µ–º Telegram-–∫–∞–Ω–∞–ª–µ –∏–ª–∏ –≥—Ä—É–ø–ø–µ !`
        const keyboard = {
            inline_keyboard: [
                [
                    {
                        text: 'üë• –ì—Ä—É–ø–ø–∞',
                        url: 'https://t.me/vpn_by_oxy/42'
                    },
                    {
                        text: 'üì¢ –ö–∞–Ω–∞–ª',
                        url: 'https://t.me/VpnByOxy'
                    }
                ],
                [
                    {
                        text: 'üîô –ù–∞–∑–∞–¥',
                        callback_data: `deviceRangeId_${ctx.session.deviceRangeId}`
                    }
                ]
            ]
        }

        const message = await this.telegramUtils.sendOrEditMessage(ctx, text, keyboard);
        if ( typeof message !== 'boolean' ) {
            ctx.session.promocodeMessageId = message.message_id
        }
    }

}